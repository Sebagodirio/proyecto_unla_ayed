#ifndef LISTASFUNCIONES_H_INCLUDED
#define LISTASFUNCIONES_H_INCLUDED
#include "Listas.h"



//PRE-CONDICIONES: Recibe una lista por parametro.
void mostrarFigurasOrdenadasPorFiguraColor(ListaFigura lista);
//PRE-CONDICIONES: Muestra la lista ordenada por figura-color.

//PRE-CONDICIONES: LAS LISTAS DEBEN ESTAR CREADAS Y SE DEBE MANDAR UN STRING CON EL NOMBRE DEL ARCHIVO QUE DESEA LEER
int leerArchivo(ListaFigura &listaFigura,ListaFigura &listaOrdenadaPorFigura,ListaFigura &listaOrdenadaPorFiguraColor,ListaColores &colores,string nombreArchivo);
//POST-CONDICIONES: SE CARGA LA LISTA CON LOS DATOS DEL ARCHIVO
/*
    DEVUELVE 1 SI SE PUDO REALIZAR
    DEVUELVE -3 SI EL ARCHIVO NO SE PUDO ABRIR
*/

//PRE-CONDICIONES: LA LISTA DEBE ESTAR CREADA Y CARGADA.
int cantidadDeFiguras(ListaFigura &lista);
//POST-CONDICIONES: DEVUELVE LA CANTIDAD DE FIGURAS QUE HAY EN LA LISTA.

//PRE-CONDICIONES: SE DEBE MANDAR EL TEXTO LEIDO POR EL ARCHIVO, UN VECTOR VACIO DE TRES POSICIONES Y DOS CHARS INDICANDO CUALES SON LOS DELIMITADORES
void obtenerDatosDeDelimitadores(string texto, int delimitadores[3],char primerDelimitador,char segundoDelimitador);
//POST-CONDICIONES:
/*
    QUEDA EL VECTOR CARGADO CON LAS POSICIONES DE LOS DELIMITADORES.
    SI DELIMITADORES[2]==-1 LA FIGURA TENIA SOLO UN DATO
*/

//PRE-CONDICIONES: SE DEBE MANDAR EL TEXTO QUE SE QUIERE SEPARAR INDICANDO DESDE QUE POSICION HASTA CUAL SE QUIERE SEPARAR EL TEXTO.
string separarTexto(string texto, int inicio,int fin);
//POST-CONDICIONES: DEVUELVE EL TEXTO SEPARADO.


//PRE-CONDICIONES: SE DEBE MANDAR LAS LISTAS DE COLORES Y FIGURAS CARGADAS.
void mostrarOrdenDeIngresoPorColor(ListaFigura &listaFiguras, ListaColores &listaColores);
//POST-CONDICIONES: MUESTRA EL ORDEN DE INGRESO POR COLOR DE LAS FIGURAS

//PRE-CONDICION: SE DEBE MANDAR LA LISTA CARGADA Y EL ORDEN QUE SE QUIERE ENCONTRAS
int encontrarPosicionOrden(ListaFigura &listaFigura,int orden);
//POST-CONDICION: SI ENCONTRO LA FIGURA CON EL ORDEN INDICADO DEVUELVE EN QUE POSICION DE LA LISTA SE ENCUENTRA.
//                SI NO LA ENCONTRO DEVUELVE -10

//PRE-CONDICIONES: LA LISTA DEBE ESTAR CREADA Y ORDENADA POR FIGURA. SE DEBEN MANDAR LA CANTIDAD DE FIGURAS.
int mostrarTotalPorFigura(ListaFigura &listsOrdenadaPorFigura, int cantidadDeFiguras);//agregado
//POST-CONDICIONES: MUESTRA TODAS LAS FIGURAS Y LA CANTIDAD DE PLASTICO UTILIZADO POR FIGURA.

//PRE-CONDICIONES: SE DEBE MANDAR UN STRING CON EL NOMBRE DE UN ARCHIVO PARA VER SI ESTE EXISTE.
int archivoExiste(string nombreArchivo);
//POST-CONDICIONES:
        /*
          DEVUELVE 1 SI EL ARCHIVO EXISTE
          DEVUELVE -3 SI EL ARCHIVO NO EXISTE
        */

//PRE-CONDICIONES: LA LISTA DEBE ESTAR CREADA Y ORDENADA POR AREA
int mostrarListaOrdenadaPorArea(ListaFigura listaFigura);
//POST-CONDICIONES: SE MUESTRA LA LISTA Y FINALMENTE SE MUESTRA LA SUMA DE TODAS LAS AREAS


#endif // LISTASFUNCIONES_H_INCLUDED
